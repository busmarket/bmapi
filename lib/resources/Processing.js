'use strict';

const ErrorMessages = require('../error_messages/ErrorMessages');
const BmApiError = ErrorMessages.BmApiError;

function Processing(client) {
    this.get = client.get;
    this.post = client.post;
}

const URL = '/processing';


Processing.prototype = {

    /**
     * ‚úÖ –û—Ç–≥—Ä—É–∑–∏—Ç—å –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ).
     * üîó https://developer.bm.parts/api/v2/processing.html#post-processing-reserve-process
     *
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * | orders_array        |     true     |               |    –ú–∞—Å—Å–∏–≤ –∑–∞–∫–∞–∑–æ–≤
     * ------------------------------------------------------------------------------
     * | delivery_config     |     true     |               |    ID –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
     * ------------------------------------------------------------------------------
     * | warehouse           |     true     |               |    ID —Å–∫–ª–∞–¥–∞ —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Ç–≥—Ä—É–∂–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É
     * ------------------------------------------------------------------------------
     * | key                 |     true     |               |    –ö–ª—é—á
     * ------------------------------------------------------------------------------
     * | expired_at          |     true     |               |    –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫–ª—é—á–∞
     * ------------------------------------------------------------------------------
     * | route_code          |     true     |               |    –ö–æ–¥ —Ä–µ–π—Å–∞
     * ------------------------------------------------------------------------------
     * | route_at            |     true     |               |    –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Ä–µ–π—Å–∞
     * ------------------------------------------------------------------------------
     * | departure_at        |     true     |               |    –í—Ä–µ–º—è –≤—ã–µ–∑–¥–∞ –∫—É—Ä—å–µ—Ä–∞ —Å–æ —Å–∫–ª–∞–¥–∞
     * ------------------------------------------------------------------------------
     * | comment             |     true     |               |    –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ—Ç–≥—Ä—É–∑–∫–µ
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     * ‚ö† –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ:
     * –ú–µ—Ç–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ—Ç–≥—Ä—É–∑–∫—É —Ä–µ–∑–µ—Ä–≤–∞, —Ç–∞–π–º–∞—É—Ç –ø–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–æ 30 —Å–µ–∫.
     */
    reserveProcess: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['orders_array', 'delivery_config', 'warehouse', 'key', 'key', 'expired_at', 'route_code', 'route_at', 'departure_at', 'comment'],
            url: {
                base: URL,
                hash: 'post-processing-reserve-process'
            }
        });
        if (!statusError)
            return this.post(`${URL}/reserve/process`, {...options});
    },

    /**
     * ‚úÖ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤—ã–µ–∑–¥–æ–≤.
     * üîó https://developer.bm.parts/api/v2/processing.html#get-processing-departures
     *
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * | delivery_config     |     true     |               |    ID –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
     * ------------------------------------------------------------------------------
     * | warehouse           |     true     |               |    ID —Å–∫–ª–∞–¥–∞
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    getDepartures: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['delivery_config', 'warehouse'],
            url: {
                base: URL,
                hash: 'post-processing-reserve-process'
            }
        });
        if (!statusError)
            return this.get(`${URL}/departures`, options);
    },

    /**
     * ‚úÖ –û—Ç–≥—Ä—É–∑–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ).
     * üîó https://developer.bm.parts/api/v2/processing.html#post-processing-sync
     *
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * | cart                |     true     |               |    ID –∫–æ—Ä–∑–∏–Ω—ã
     * ------------------------------------------------------------------------------
     * | delivery_config     |     true     |               |    ID –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
     * ------------------------------------------------------------------------------
     * | warehouse           |     true     |               |    ID —Å–∫–ª–∞–¥–∞ —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –æ—Ç–≥—Ä—É–∂–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É
     * ------------------------------------------------------------------------------
     * | key                 |     true     |               |    –ö–ª—é—á
     * ------------------------------------------------------------------------------
     * | expired_at          |     true     |               |    –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫–ª—é—á–∞
     * ------------------------------------------------------------------------------
     * | route_code          |     true     |               |    –ö–æ–¥ —Ä–µ–π—Å–∞
     * ------------------------------------------------------------------------------
     * | route_at            |     true     |               |    –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Ä–µ–π—Å–∞
     * ------------------------------------------------------------------------------
     * | departure_at        |     true     |               |    –í—Ä–µ–º—è –≤—ã–µ–∑–¥–∞ –∫—É—Ä—å–µ—Ä–∞ —Å–æ —Å–∫–ª–∞–¥–∞
     * ------------------------------------------------------------------------------
     * | comment             |     true     |               |    –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ—Ç–≥—Ä—É–∑–∫–µ
     * ------------------------------------------------------------------------------
     * | save_unprocessed    |     true     |               |    –°–æ—Ö—Ä–∞–Ω—è—Ç—å –Ω–µ–æ—Ç–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –Ω–µ—Ç
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     * ‚ö† –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ:
     * –ú–µ—Ç–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –æ—Ç–≥—Ä—É–∑–∫—É —Ä–µ–∑–µ—Ä–≤–∞, —Ç–∞–π–º–∞—É—Ç –ø–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–æ 30 —Å–µ–∫.
     */
    processSync: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['cart', 'delivery_config', 'warehouse', 'key', 'key', 'expired_at', 'route_code', 'route_at', 'departure_at', 'comment', 'save_unprocessed'],
            url: {
                base: URL,
                hash: 'post-processing-reserve-process'
            }
        });
        if (!statusError)
            return this.post(`${URL}/sync`, {...options});
    },

    /**
     * ‚úÖ Excel –∏–∑ –Ω–µ–æ—Ç–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.
     * üîó https://developer.bm.parts/api/v2/processing.html#excel
     *
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * | task_id             |     false     |               |
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    downloadUnshipped: function (options = {}) {
        return this.get(`${URL}/download/unshipped${options.task_id ? '/' + options.task_id : ''}`);
    },

    /**
     * ‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ—Ç–≥—Ä—É–∑–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã.
     * üîó https://developer.bm.parts/api/v2/processing.html#get-processing-cart-string-cart-uuid-pre-check
     *
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * | cart_uuid           |     true     |               |    ID –ö–æ—Ä–∑–∏–Ω—ã
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    cartPreCheck: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['cart_uuid'],
            url: {
                base: URL,
                hash: 'post-processing-reserve-process'
            }
        });
        if (!statusError)
            return this.get(`${URL}/cart/${options.cart_uuid}/pre_check`);
    },

    /**
     * ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ—Ç–≥—Ä—É–∑–∫–∏.
     * üîó https://developer.bm.parts/api/v2/processing.html#get-processing-shipment-task-id
     *
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * | task_id             |     true     |               |
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    checkShipmentStatus: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['task_id'],
            url: {
                base: URL,
                hash: 'post-processing-reserve-process'
            }
        });
        if (!statusError)
            return this.get(`${URL}/shipment/${options.task_id}`);
    },


};

module.exports = Processing;
