'use strict';

const ErrorMessages = require('../error_messages/ErrorMessages');
const BmApiError = ErrorMessages.BmApiError;


function Returns(client) {
    this.get = client.get;
    this.post = client.post;
}

const URL = '/returns';
Returns.prototype = {


    /***
     * ‚úÖ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞.
     * üîó https://developer.bm.parts/api/v2/returns.html#post-trainings-register
     *
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    returnsList: function () {
        return this.get(`${URL}/products`);
    },

    /***
     * ‚úÖ –°–ø–∏—Å–æ–∫ –ø—Ä–∏—á–∏–Ω –≤–æ–∑–≤—Ä–∞—Ç–∞.
     * üîó https://developer.bm.parts/api/v2/returns.html#post-returns-request
     *
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * params: [{‚Äúcode‚Äù: ‚Äú000053284‚Äù, ‚Äúcause_code‚Äù: ‚Äú000026117‚Äù, ‚Äúcount‚Äù: 3}]
     *
     * | code                |     true     |               |  –∫–æ–¥ —Ç–æ–≤–∞—Ä–∞
     * ------------------------------------------------------------------------------
     * | cause_code          |     true     |               |    reason code
     * ------------------------------------------------------------------------------
     * | count               |     true     |               |–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    returnsRequestCreate: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: [],
            url: {
                base: URL,
                hash: 'post-returns-request'
            }
        });
        if (!statusError)
            return this.post(`${URL}/request`,options);
    },

    /***
     * ‚úÖ –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç.
     * üîó https://developer.bm.parts/api/v2/returns.html#get-returns-causes
     *
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    returnsCauses: function () {
        return this.get(`${URL}/causes`);
    },



    /***
     * ‚úÖ –û–ø–æ–≤–µ—Å—Ç–∏—Ç—å –æ–± –≤–æ–∑–≤—Ä–∞—Ç–µ.
     * üîó https://developer.bm.parts/api/v2/returns.html#post-returns-notify
     *
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * | query_text          |     true     |               |  –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ POST –∑–∞–ø—Ä–æ—Å
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    returnsNotify: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['query_text'],
            url: {
                base: URL,
                hash: 'post-returns-notify'
            }
        });
        if (!statusError)
            return this.post(`${URL}/notify`, options['query_text']);
    },
};


module.exports = Returns;
