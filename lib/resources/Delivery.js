'use strict';

const ErrorMessages = require('../error_messages/ErrorMessages');

function Delivery(client) {
    let methods = ['get', 'post', 'put', 'delete'];
    for(let m of methods) {
        this[m] = client[m]
    }
}

Delivery.prototype = {
    /***
     * ‚úÖ –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤ –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–∞
     * üîó https://developer.bm.parts/api/v2/delivery.html#get-delivery-carriers-warehouses
     *
     * –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä `city` –∏–ª–∏ `carrier` —É–∫–∞–∑–∞–Ω –Ω–µ –≤–µ—Ä–Ω–æ
     * –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω –æ—Ç–≤–µ—Ç [422 Unprocessable Entity]
     */
    carriersWarehouses: function (options = {}) {
        if (Reflect.has(options, 'city') && Reflect.has(options, 'carrier'))
            return this.get(`/delivery/carriers/warehouses`, options);
        else
            throw Error(ErrorMessages.delivery.warehouses)
    },

    /***
     * ‚úÖ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–∞
     * üîó https://developer.bm.parts/api/v2/delivery.html#get-delivery-carrier-cities
     */
    carriersCities: function (options = {}) {
        if (
            Reflect.has(options, 'region') &&
            Reflect.has(options, 'carrier')
        )
            return this.get(`/delivery/carrier/cities`, {is_address: false, ...options});
        else
            throw Error(ErrorMessages.delivery.cities)
    },
};

module.exports = Delivery;