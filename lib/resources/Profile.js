'use strict';

const ErrorMessages = require('../error_messages/ErrorMessages');
const BmApiError = ErrorMessages.BmApiError;

function Profile(client) {
    let methods = ['get', 'post', 'put', 'delete'];
    for (let m of methods) {
        this[m] = client[m]
    }
}

const URL = '/profile';
Profile.prototype = {

    /***
     * ‚úÖ –ò–∑–º–µ–Ω–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥ –æ—Ç–≥—Ä—É–∑–∫–∏
     * üîó https://developer.bm.parts/api/v2/profile.html#post-profile-change-warehouse
     *
     */
    changeWarehouse: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['warehouse_uuid'],
            url: {
                base: URL,
                hash: 'post-profile-change-warehouse'
            }
        });
        if (!statusError)
            return this.post(`${URL}/change_warehouse`, options);

    },

    /***
     * ‚úÖ –°–ø–∏—Å–æ–∫ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–æ–≤ (–≤–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞)
     * üîó https://developer.bm.parts/api/v2/profile.html#get-profile-bound-clients
     *
     */
    getBoundClients: function (options) {
        return this.get(`${URL}/bound_clients`, {client_as: 'obj', ...options});
    },

    /***
     * ‚úÖ –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫
     * üîó https://developer.bm.parts/api/v2/profile.html#get-profile-mailing
     *
     */
    getMailing: function () {
        return this.get(`${URL}/mailing`);
    },

    /***
     * ‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫
     * üîó https://developer.bm.parts/api/v2/profile.html#post-profile-mailing
     *
     */
    saveMailing: function (options = {}) {
        if (Reflect.ownKeys(options).length)
            return this.post(`${URL}/mailing`, options);
        else
            throw Error(ErrorMessages.profile.mailing_save)
    },

    /***
     * ‚úÖ –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞
     * üîó https://developer.bm.parts/api/v2/profile.html#get-profile-history
     */
    history: function (options = {}) {
        return this.get(`${URL}/history`, options);
    },

    /***
     * ‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞
     * üîó https://developer.bm.parts/api/v2/profile.html#post-profile-masq
     *
     */
    profileMasq: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['client_uuid'],
            url: {
                base: URL,
                hash: 'post-profile-masq'
            }
        });
        if (!statusError)
            return this.post(`${URL}/masq`, options);
    },

    /***
     * ‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
     * üîó https://developer.bm.parts/api/v2/profile.html#get-profile-me
     *
     */
    me: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['clients_as'],
            url: {
                base: URL,
                hash: 'get-profile-me'
            }
        });
        if (!statusError)
            return this.get(`${URL}/me`, {clients_as: 'obj', ...options});
    },

    /***
     * ‚úÖ –û–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–æ –∫–ª—é—á—É
     * üîó https://developer.bm.parts/api/v2/profile.html#post-profile-settings-string-app-name-update
     */
    updateApp: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['app_name'],
            url: {
                base: URL,
                hash: 'post-profile-settings-string-app-name-update'
            }
        });
        if (!statusError)
            return this.post(`/${URL}/settings/${options.app_name}/update`);
    },

    /***
     * ‚úÖ –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * üîó https://developer.bm.parts/api/v2/profile.html#get-profile-settings-string-app-name
     */
    settingsGet: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['app_name'],
            url: {
                base: URL,
                hash: 'get-profile-settings-string-app-name'
            }
        });
        if (!statusError)
            return this.get(`/${URL}/settings/${options.app_name}`);
    },

    /***
     * ‚úÖ –û–±–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * üîó https://developer.bm.parts/api/v2/profile.html#post-profile-settings-string-app-name
     */
    settingsSave: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['app_name', 'settings'],
            url: {
                base: URL,
                hash: 'post-garage-car-string-car-uuid'
            }
        });
        if (!statusError)
            return this.post(`${URL}/settings/${options.app_name}`);

    },

    /***
     * ‚úÖ –°–æ–∑–¥–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * üîó https://developer.bm.parts/api/v2/profile.html#post-profile-settings-string-app-name
     */
    settingsCreate: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['app_name', 'settings'],
            url: {
                base: URL,
                hash: 'post-garage-car-string-car-uuid'
            }
        });
        if (!statusError)
            return this.post(`${URL}/settings/${options.app_name}`);

    },

    /***
     * ‚úÖ –£–¥–∞–ª–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * üîó https://developer.bm.parts/api/v2/profile.html#delete-profile-settings-string-app-name
     */
    settingsDelete: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['app_name'],
            url: {
                base: URL,
                hash: 'delete-profile-settings-string-app-name'
            }
        });
        if (!statusError)
             return this.delete(`${URL}/settings/${options.app_name}`, options);

    },
};

module.exports = Profile;
