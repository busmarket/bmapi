'use strict';

const ErrorMessages = require('../error_messages/ErrorMessages');
const BmApiError = ErrorMessages.BmApiError;

const URL = '/catalog';

function Catalog(client) {
    this.get = client.get;
}


Catalog.prototype = {

    /**
     * ‚úÖ –ù–æ–≤—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è.
     * üîó https://developer.bm.parts/api/v2/catalog.html#get-catalog-new-arrivals
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    newArrivals: function (options = {}) {
        return this.get(`${URL}/new_arrivals`);
    },

    /**
     * ‚úÖ –°–ø–∏—Å–æ–∫ –±—Ä–µ–Ω–¥–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–µ–π.
     * üîó https://developer.bm.parts/api/v2/catalog.html#get-catalog-brands
     *
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –∫–æ—Ç–æ—Ä—ã—Ö
     * name - –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–º—è –±—Ä–µ–Ω–¥–∞,
     * products_count - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –¥–∞–Ω–Ω–æ–º –±—Ä–µ–Ω–¥–µ.
     *
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * |  page               | false        |              | –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–¥–∞—á–∏
     * ------------------------------------------------------------------------------
     * |  per_page           | false        |              | –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–¥–∞—á–∏
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    brands: function (options = {}) {
        return this.get(`${URL}/brands`, options);
    },


    /**
     * ‚úÖ –°–ø–∏—Å–æ–∫ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π –¥–ª—è –º–æ–¥–µ–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è.
     * üîó https://developer.bm.parts/api/v2/catalog.html#get-catalog-cars-brand-string-car-brand-model-string-car-model-engines
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * |  car_brand          | true         |              | ID –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω–æ–π –º–∞—Ä–∫–∏
     * ------------------------------------------------------------------------------
     * |  car_model          | true         |              | ID –º–æ–¥–µ–ª–∏
     * ------------------------------------------------------------------------------
     * |  q                  | false        |              | –§–∏–ª—å—Ç—Ä –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    enginesByModel: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: ['car_brand', 'car_model'],
            url: {
                base: URL,
                hash: 'get-catalog-cars-brand-string-car-brand-model-string-car-model-engines'
            }
        });
        if (!statusError)
            return this.get(`${URL}/cars/brand/${options.car_brand}/model/${options.car_model}/engines/`);

    },


    /**
     * ‚úÖ –î–µ—Ä–µ–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö —É–∑–ª–æ–≤.
     * üîó https://developer.bm.parts/api/v2/catalog.html#get-catalog-nodes-path
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * |  parent_path        | false        |              | –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —É–∑–ª—É,
     * |                     |              |              | –Ω–∞–ø—Ä–∏–º–µ—Ä: –õ–µ–≥–∫–æ–≤—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏/–î–≤–∏–≥–∞—Ç–µ–ª—å/–†–µ–º–µ–Ω–Ω—ã–π –ø—Ä–∏–≤–æ–¥
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */

    carNodesPath: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: [],
            url: {
                base: URL,
                hash: 'get-catalog-nodes-path'
            }
        });
        if (!statusError) {
            console.log(`${URL}/nodes/path${options.parent_path ? '/' + options.parent_path : ''}`);
            return this.get(`${URL}/nodes/path${options.parent_path ? '/' + options.parent_path : ''}`);
        }
    },


    /**
     * ‚úÖ –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã—Ö —É–∑–ª–æ–≤.
     * üîó https://developer.bm.parts/api/v2/catalog.html#get-catalog-nodes
     * * Query Parameters (options = {}):
     * ==============================================================================
     * |_____KEY____________|||_isRequired_|||__default___|||__description_
     * ==============================================================================
     * |  parent_uuid        | false        |              | ID —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —É–∑–ª–∞
     * ------------------------------------------------------------------------------
     * ==============================================================================
     *
     */
    carNodes: function (options = {}) {
        const statusError = BmApiError({
            inputOptions: options,
            requireParameters: [],
            url: {
                base: URL,
                hash: 'get-catalog-nodes'
            }
        });
        if (!statusError)
            return this.get(`${URL}/nodes${options.parent_uuid ? '/' + options.parent_uuid : ''}`);
    },

};

module.exports = Catalog;
